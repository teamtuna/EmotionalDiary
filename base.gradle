apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    correctErrorTypes true
}

//default
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
}

dependencies {
//    implementation 'androidx.test:core:1.4.0'
//    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    //paging
    def paging_version = "3.0.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha13"

    //log
    debugImplementation 'com.github.eastar-dev.EastarLog2:log:2.1.9'
    releaseImplementation 'com.github.eastar-dev.EastarLog2:logNoOp:2.1.9'
    testImplementation 'com.github.eastar-dev.EastarLog2:logTest:2.1.9'
}

//coroutines
dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
}
android {
    packagingOptions {
        exclude "META-INF/AL2.0"
    }
}

// Unit5 Tests on the JUnit Platform
apply plugin: 'de.mannodermaus.android-junit5'
dependencies {
    def junit5_version = "5.7.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_version"
}
android {
    packagingOptions {
        exclude "META-INF/LGPL2.1"
    }
}

//mockito
dependencies {
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
//    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.2.2'
}

//asserting
dependencies {
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    // truth
    def truth_version = "1.1.3"
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
}


//room
android {
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation"  : "$projectDir/schemas".toString(),
                    "room.incremental"     : "true",
                    "room.expandProjection": "true"]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}
dependencies {
    def room_version = "2.4.0-alpha05"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
}

//java.time.*
android {
    compileOptions {
        coreLibraryDesugaringEnabled true
    }
}
dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

//robolectric
dependencies {
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'
}
android {
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}
